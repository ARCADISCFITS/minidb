{"version":3,"sources":["../src/database.js"],"names":[],"mappings":"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","file":"database.js","sourcesContent":["import {format} from 'util';\nimport esc from './esc';\n\nexport default class Database {\n  constructor(options) {\n    this.options = options;\n  }\n\n  get verbose() {\n    return false;\n    // return true;\n  }\n\n  ident(value) {\n    return esc(value, '`');\n  }\n\n  literal(value) {\n    return esc(value, \"'\");\n  }\n\n  async open() {\n  }\n\n  async close() {\n  }\n\n  async each(sql, params, callback) {\n  }\n\n  async execute(sql, params) {\n  }\n\n  beginTransaction() {\n    return this.execute('BEGIN TRANSACTION');\n  }\n\n  commit() {\n    return this.execute('COMMIT TRANSACTION');\n  }\n\n  rollback() {\n    return this.execute('ROLLBACK TRANSACTION');\n  }\n\n  async transaction(block) {\n    await this.beginTransaction();\n\n    try {\n      await block();\n\n      await this.commit();\n    } catch (ex) {\n      console.log('ERROR IN TRANSACTION', ex);\n      await this.rollback();\n      throw ex;\n    }\n  }\n\n  async all(sql, params) {\n    const rows = [];\n    const self = this;\n\n    await self.each(sql, params, (columns, row, index) => {\n      if (row) {\n        rows.push(row);\n      }\n    });\n\n    return rows;\n  }\n\n  async get(sql, params) {\n    const rows = [];\n\n    await this.each(sql, params, (columns, row, index) => {\n      if (row) {\n        rows.push(row);\n      }\n    });\n\n    return (rows.length ? rows[0] : null);\n  }\n\n  buildWhere(where) {\n    const clause = [];\n    const values = [];\n\n    if (where) {\n      for (const key of Object.keys(where)) {\n        clause.push(this.ident(key) + ' = ?');\n        values.push(where[key]);\n      }\n    }\n\n    return [clause, values];\n  }\n\n  buildInsert(attributes) {\n    const names = [];\n    const values = [];\n    const placeholders = [];\n\n    for (const key of Object.keys(attributes)) {\n      names.push(this.ident(key));\n      placeholders.push('?');\n      values.push(attributes[key]);\n    }\n\n    return [names, placeholders, values];\n  }\n\n  buildUpdate(attributes) {\n    const sets = [];\n    const values = [];\n\n    for (const name of Object.keys(attributes)) {\n      sets.push(this.ident(name) + ' = ?');\n      values.push(attributes[name]);\n    }\n\n    return [sets, values];\n  }\n\n  findAllByAttributes(tableName, columns, where, orderBy, limit, offset) {\n    const selection = (columns == null ? ['*'] : columns);\n\n    const [clause, values] = this.buildWhere(where);\n\n    let parts = [];\n\n    if (clause.length > 0) {\n      parts.push(format(' WHERE %s', clause.join(' AND ')));\n    }\n\n    if (orderBy != null) {\n      parts.push(format(' ORDER BY %s', orderBy));\n    }\n\n    if (limit != null) {\n      parts.push(format(' LIMIT %s', this.literal(limit)));\n    }\n\n    if (offset != null) {\n      parts.push(format(' OFFSET %s', this.literal(offset)));\n    }\n\n    const sql = format('SELECT %s FROM %s%s',\n                       selection.join(', '),\n                       this.ident(tableName),\n                       parts.join(''));\n\n    return this.all(sql, values);\n  }\n\n  async findFirstByAttributes(tableName, columns, attributes, orderBy) {\n    const rows = await this.findAllByAttributes(tableName, columns, attributes, orderBy, 1);\n\n    return rows != null ? rows[0] : null;\n  }\n\n  trace() {\n  }\n\n  profile(sql, time) {\n    console.log('PROFILE', '(' + time + 'ms)', sql);\n  }\n\n  async insert(table, attributes, options) {\n    const [names, placeholders, values] = this.buildInsert(attributes);\n\n    const sql = format('INSERT INTO %s (%s)\\nVALUES (%s);',\n                       table,\n                       names.join(', '),\n                       placeholders.join(', '));\n\n    await this.execute(sql, values);\n\n    return this.lastID;\n  }\n\n  async update(table, where, attributes, options) {\n    const values = [];\n\n    const [sets, updateValues] = this.buildUpdate(attributes);\n\n    values.push.apply(values, updateValues);\n\n    if (options && options.raw) {\n      for (const name of Object.keys(options.raw)) {\n        sets.push(format('%s = %s', name, options.raw[name]));\n      }\n    }\n\n    const [clause, whereValues] = this.buildWhere(where);\n\n    values.push.apply(values, whereValues);\n\n    const whereClause = clause.length ? ' WHERE ' + clause.join(' AND ') : '';\n\n    const sql = format('UPDATE %s SET %s%s',\n                       table, sets.join(', '), whereClause);\n\n    await this.execute(sql, values);\n\n    return null;\n  }\n\n  async delete(table, where, options) {\n    const [clause, values] = this.buildWhere(where);\n\n    const whereClause = clause.length ? ' WHERE ' + clause.join(' AND ') : '';\n\n    const sql = format('DELETE FROM %s%s',\n                       table, whereClause);\n\n    await this.execute(sql, values);\n\n    return null;\n  }\n\n  toDatabase(value, column) {\n    if (value == null) {\n      return null;\n    }\n\n    switch (column.type) {\n      case 'string':\n        return value.toString();\n\n      case 'integer':\n        return +value;\n\n      case 'double':\n        return +value;\n\n      case 'boolean':\n        return !!value;\n\n      case 'datetime':\n        return value;\n\n      case 'json':\n        return JSON.stringify(value);\n\n      default:\n        return value.toString();\n    }\n  }\n\n  fromDatabase(value, column) {\n    if (value == null) {\n      return null;\n    }\n\n    switch (column.type) {\n      case 'string':\n        return value.toString();\n\n      case 'integer':\n        return +value;\n\n      case 'double':\n        return +value;\n\n      case 'boolean':\n        return !!value;\n\n      case 'datetime':\n        return new Date(+value);\n\n      case 'json':\n        return JSON.parse(value);\n\n      default:\n        return value.toString();\n    }\n  }\n}\n"]}