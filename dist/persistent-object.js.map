{"version":3,"sources":["../src/persistent-object.js"],"names":[],"mappings":"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","file":"persistent-object.js","sourcesContent":["import {format} from 'util';\nimport Mixin from 'mixmatch';\n\nconst models = [];\n\nexport default class PersistentObject extends Mixin {\n  constructor(db, attributes) {\n    super();\n\n    this.initializePersistentObject(db, attributes);\n  }\n\n  get db() {\n    return this._db;\n  }\n\n  get rowID() {\n    return this._rowID;\n  }\n\n  initializePersistentObject(db, attributes) {\n    this._db = db;\n    this.updateFromDatabaseAttributes(attributes || {});\n\n    return this;\n  }\n\n  static async findFirst(ModelClass, db, attributes) {\n    const row = await db.findFirstByAttributes(ModelClass.tableName, null, attributes);\n\n    if (row) {\n      const instance = new ModelClass();\n\n      instance.initializePersistentObject(db, row);\n\n      return instance;\n    }\n\n    return null;\n  }\n\n  static async findAll(ModelClass, db, attributes, orderBy) {\n    const rows = await db.findAllByAttributes(ModelClass.tableName, null, attributes, orderBy);\n\n    return rows.map((row) => {\n      const instance = new ModelClass();\n\n      instance.initializePersistentObject(db, row);\n\n      return instance;\n    });\n  }\n\n  static async findOrCreate(ModelClass, db, attributes) {\n    const row = await db.findFirstByAttributes(ModelClass.tableName, null, attributes);\n\n    const instance = new ModelClass();\n\n    instance.initializePersistentObject(db, row || attributes);\n\n    return instance;\n  }\n\n  static create(ModelClass, db, attributes) {\n    const instance = new ModelClass();\n\n    instance.initializePersistentObject(db, attributes);\n\n    return instance;\n  }\n\n  static async count(ModelClass, db, attributes) {\n    const result = await db.findFirstByAttributes(ModelClass.tableName, ['COUNT(1) AS count'], attributes);\n\n    return result.count;\n  }\n\n  static get modelMethods() {\n    return ['findFirst', 'findAll', 'findOrCreate', 'create', 'count'];\n  }\n\n  static get models() {\n    return models.slice();\n  }\n\n  static register(modelClass) {\n    models.push(modelClass);\n\n    PersistentObject.includeInto(modelClass);\n\n    const wrap = (method) => {\n      return function(...params) {\n        const args = [modelClass].concat(params);\n        return PersistentObject[method].apply(PersistentObject, args);\n      };\n    };\n\n    for (let method of PersistentObject.modelMethods) {\n      modelClass[method] = wrap(method);\n    }\n  }\n\n  updateFromDatabaseAttributes(attributes) {\n    this._updateFromDatabaseAttributes(attributes);\n  }\n\n  _updateFromDatabaseAttributes(attributes) {\n    for (const column of this.constructor.columns) {\n      const name = '_' + column.name;\n      const value = attributes[column.column];\n\n      // if (value == null && column[2] && column[2].null === false) {\n      //   console.warn(format('column %s cannot be null', name));\n      // }\n\n      this[name] = this.db.fromDatabase(value, column);\n    }\n\n    this._rowID = this.toNumber(attributes.id);\n  }\n\n  get databaseValues() {\n    const values = {};\n\n    for (const column of this.constructor.columns) {\n      const name = column.name;\n      const value = this['_' + name];\n\n      if (value == null && column.null === false) {\n        throw Error(format('column %s cannot be null', name));\n      }\n\n      values[column.column] = this.db.toDatabase(value, column);\n    }\n\n    return values;\n  }\n\n  get changes() {\n    return this.databaseValues;\n  }\n\n  toNumber(integer) {\n    return integer != null ? +integer : null;\n  }\n\n  updateTimestamps() {\n    const now = new Date();\n\n    if (!this.createdAt) {\n      this.createdAt = now;\n    }\n\n    this.updatedAt = now;\n  }\n\n  get isPersisted() {\n    return this.rowID > 0;\n  }\n\n  async save(options) {\n    options = options || {};\n\n    if (this.beforeSave) {\n      await this.beforeSave(options);\n    }\n\n    const values = this.databaseValues;\n\n    if (options.timestamps !== false) {\n      this.updateTimestamps();\n    }\n\n    values.created_at = this.db.toDatabase(this.createdAt, {type: 'datetime'});\n    values.updated_at = this.db.toDatabase(this.updatedAt, {type: 'datetime'});\n\n    if (!this.isPersisted) {\n      this._rowID = await this.db.insert(this.constructor.tableName, values, {pk: 'id'});\n    } else {\n      await this.db.update(this.constructor.tableName, {id: this.rowID}, values);\n    }\n\n    // It's not possible to override `async` methods currently (and be able to use `super`)\n    if (this.afterSave) {\n      await this.afterSave(options);\n    }\n\n    return this;\n  }\n\n  async delete(options) {\n    options = options || {};\n\n    if (this.isPersisted) {\n      await this.db.delete(this.constructor.tableName, {id: this.rowID});\n\n      this._rowID = null;\n      this.createdAt = null;\n      this.updatedAt = null;\n    }\n\n    return this;\n  }\n\n  async loadOne(name, model, id) {\n    const ivar = '_' + name;\n\n    if (this[ivar]) {\n      return this[ivar];\n    }\n\n    this[ivar] = await model.findFirst(this.db, {id: id || this[ivar + 'RowID']});\n\n    return this[ivar];\n  }\n\n  setOne(name, instance) {\n    const ivar = '_' + name;\n\n    if (instance) {\n      this[ivar] = instance;\n      this[ivar + 'RowID'] = instance.rowID;\n    } else {\n      this[ivar] = null;\n      this[ivar + 'RowID'] = null;\n    }\n  }\n}\n"]}