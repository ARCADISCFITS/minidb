{"version":3,"sources":["../src/persistent-object.js"],"names":[],"mappings":"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","file":"persistent-object.js","sourcesContent":["import {format} from 'util';\n\nconst models = [];\n\nexport default class PersistentObject {\n  constructor(db, attributes) {\n    this.initializePersistentObject(db, attributes);\n  }\n\n  initializePersistentObject(db, attributes) {\n    this.db = db;\n\n    if (attributes) {\n      this.updateFromDatabaseAttributes(attributes);\n    }\n\n    this.id = null;\n    this.createdAt = null;\n    this.updatedAt = null;\n  }\n\n  static async findFirst(ModelClass, db, attributes) {\n    const row = await db.findFirstByAttributes(ModelClass.tableName, null, attributes);\n\n    if (row) {\n      const instance = new ModelClass(db);\n\n      instance.updateFromDatabaseAttributes(row);\n\n      return instance;\n    }\n\n    return null;\n  }\n\n  static async findAll(ModelClass, db, attributes, orderBy) {\n    const rows = await db.findAllByAttributes(ModelClass.tableName, null, attributes, orderBy);\n\n    return rows.map((row) => {\n      const instance = new ModelClass(db);\n      instance.updateFromDatabaseAttributes(row);\n      return instance;\n    });\n  }\n\n  static async findOrCreate(ModelClass, db, attributes) {\n    const row = await db.findFirstByAttributes(ModelClass.tableName, null, attributes);\n\n    const instance = new ModelClass(db);\n\n    instance.updateFromDatabaseAttributes(row || attributes);\n\n    return instance;\n  }\n\n  static async count(ModelClass, db, attributes) {\n    const result = await db.findFirstByAttributes(ModelClass.tableName, ['COUNT(1) AS count'], attributes);\n\n    return result.count;\n  }\n\n  static get modelMethods() {\n    return ['findFirst', 'findAll', 'findOrCreate', 'count'];\n  }\n\n  static get models() {\n    return models.slice();\n  }\n\n  static register(modelClass) {\n    models.push(modelClass);\n\n    const wrap = (method) => {\n      return function (...params) {\n        const args = [modelClass].concat(params);\n        return PersistentObject[method].apply(PersistentObject, args);\n      };\n    };\n\n    for (let method of PersistentObject.modelMethods) {\n      modelClass[method] = wrap(method);\n    }\n  }\n\n  updateFromDatabaseAttributes(attributes) {\n    for (const column of this.constructor.columns) {\n      const name = column.name;\n      const value = attributes[column.column];\n\n      // if (value == null && column[2] && column[2].null === false) {\n      //   console.warn(format('column %s cannot be null', name));\n      // }\n\n      this[name] = this.db.fromDatabase(value, column);\n    }\n\n    this.id = this.toNumber(attributes.id);\n  }\n\n  get databaseValues() {\n    const values = {};\n\n    for (const column of this.constructor.columns) {\n      const name = column.name;\n      const value = this[name];\n\n      if (value == null && column.null === false) {\n        throw Error(format('column %s cannot be null', name));\n      }\n\n      values[column.column] = this.db.toDatabase(value, column);\n    }\n\n    return values;\n  }\n\n  get changes() {\n    return this.databaseValues;\n  }\n\n  toNumber(integer) {\n    return integer != null ? +integer : null;\n  }\n\n  updateTimestamps() {\n    const now = new Date();\n\n    if (!this.createdAt) {\n      this.createdAt = now;\n    }\n\n    this.updatedAt = now;\n  }\n\n  get isPersisted() {\n    return this.id > 0;\n  }\n\n  async save(options) {\n    options = options || {};\n\n    if (this.beforeSave) {\n      await this.beforeSave(options);\n    }\n\n    const values = this.databaseValues;\n\n    if (options.timestamps !== false) {\n      this.updateTimestamps();\n    }\n\n    values.created_at = this.createdAt;\n    values.updated_at = this.updatedAt;\n\n    if (!this.isPersisted) {\n      this.id = await this.db.insert(this.constructor.tableName, values, {pk: 'id'});\n    } else {\n      await this.db.update(this.constructor.tableName, {id: this.id}, this.changes);\n    }\n\n    // It's not possible to override `async` methods currently (and be able to use `super`)\n    if (this.afterSave) {\n      await this.afterSave(options);\n    }\n\n    return this;\n  }\n\n  async delete(options) {\n    options = options || {};\n\n    if (this.isPersisted) {\n      await this.db.delete(this.constructor.tableName, {id: this.id});\n\n      this.id = null;\n      this.createdAt = null;\n      this.updatedAt = null;\n    }\n\n    return this;\n  }\n\n  async loadOne(name, model, id) {\n    if (this['_' + name]) {\n      return this['_' + name];\n    }\n\n    this['_' + name] = await model.findFirst(this.db, {id: id || this[name + 'ID']});\n\n    return this['_' + name];\n  }\n\n  setOne(name, instance) {\n    if (instance) {\n      this['_' + name] = instance;\n      this[name + 'ID'] = instance.id;\n    } else {\n      this['_' + name] = null;\n      this[name + 'ID'] = null;\n    }\n  }\n}\n"]}